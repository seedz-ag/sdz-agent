#!/usr/bin/node
const fs = require('fs');
const path = require('path');
const project = path.join(__dirname, '../tsconfig.json');
const dev = fs.existsSync(project);
const { exec } = require('child_process');
const { Logger } = require('sdz-agent-common');
const yargs = require('yargs/yargs');
const { hideBin } = require('yargs/helpers');

if (dev) {
  require('ts-node').register({ project });
}

const { argv } = yargs(hideBin(process.argv))
  .command('config', 'Runs interactive config', (yargs) => {
    return yargs
      .positional('C', {
        default: true
      })
  })
  .command('dto', 'Runs interactive DTO config', (yargs) => {
    return yargs
      .positional('D', {
        default: true
      })
  })
  .command('query [sql]', 'Executes the given query', (yargs) => {
    return yargs
      .positional('sql', {
        default: ''
      })
  })
  .command('scheduler', 'Runs the scheduler', (yargs) => {
    return yargs
      .positional('S', {
        default: true
      })
  })
  .command('update', 'Updates the agent', (yargs) => {
    return yargs
      .positional('U', {
        default: true
      })
  })
  .epilog('for more information visit https://github.com/seedz/sdz-agent')
  .showHelpOnFail(false, 'whoops, something went wrong! run with --help')
  .options({
    config: {
      alias: 'C',
      description: "Runs interactive config",
      requiresArg: false,
      required: false,
    },
    configDto: {
      alias: 'D',
      description: "Runs interactive DTO config",
      requiresArg: false,
      required: false,
    },
    query: {
      alias: 'Q',
      description: "Executes the given query",
      requiresArg: true,
      required: false,
    },
    schedule: {
      alias: 'S',
      description: "Runs the scheduler",
      requiresArg: false,
      required: false,
    },
    update: {
      alias: 'U',
      description: "Updates the agent",
      requiresArg: false,
      required: false,
    }
  })

  .usage('This is the SdzAgent command line program\n\nUsage: $0 [options]')
  .version('version', '1.0.0').alias('version', 'V');

switch (true) {
  case (argv.C || argv.config):
    require(`../src/config/config.ts`);
    break;
  case (argv.D || argv.configDto):
    require(`../src/config/dto.ts`);
    break;
  case (argv.H || argv.help):
    break;
  case (argv.S || argv.schedule):
    process.env.COMMAND_LINE = true;
    require(`../src/schedule.ts`);
    break;
  case (argv.U || argv.update):
    exec("git pull", (error, stdout, stderr) => {
      Logger.info(stdout)
    });
    break
  default:
    require(`../src/bootstrap.ts`);
}
