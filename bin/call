#!/usr/bin/node
const fs = require('fs');
const path = require('path');
const project = path.join(__dirname, '../tsconfig.json');
const dev = fs.existsSync(project);
const { exec } = require('child_process');
const { Logger } = require('sdz-agent-common');
const yargs = require('yargs/yargs');
const { hideBin } = require('yargs/helpers');

if (dev) {
  require('ts-node').register({ project });
}

const { argv } = yargs(hideBin(process.argv));

switch (true) {
  case (argv.C || argv.config):
    require(`../src/config/config.ts`);
    break;
  case (argv.D || argv.configDto):
    require(`../src/config/dto.ts`);
    break;
  case (argv.S || argv.schedule):
    process.env.COMMAND_LINE = true;
    require(`../src/schedule.ts`);
    break;
  case (argv.superacao):
    (async () => {
      require('dotenv').config();
      const Superacao = require(`${process.cwd()}/src/superacao`);
      const superacao = new Superacao({
        api: {
          password: process.env.SUPERACAO_API_PASSWORD,
          username: process.env.SUPERACAO_API_USERNAME,
        },
        database: {
          driver: process.env.SUPERACAO_DATABASE_DRIVER,
          host: process.env.SUPERACAO_DATABASE_HOST,
          schema: process.env.SUPERACAO_DATABASE_SCHEMA,
          password: process.env.SUPERACAO_DATABASE_PASSWORD,
          port: process.env.SUPERACAO_DATABASE_PORT,
          server: process.env.SUPERACAO_DATABASE_SERVER,
          username: process.env.SUPERACAO_DATABASE_USERNAME,
        },
        ftp: {
          host: process.env.SUPERACAO_FTP_HOST,
          password: process.env.SUPERACAO_FTP_PASSWORD,
          port: process.env.SUPERACAO_FTP_PORT,
          username: process.env.SUPERACAO_FTP_USERNAME,
        },
        legacy: 'TRUE' === `${process.env.SUPERACAO_LEGACY}`.toUpperCase(),
      });
      await superacao.process();
      process.exitCode = 0;
      process.exit();
    })();
    break;
  case (argv.U || argv.update):
    exec("git pull", (error, stdout, stderr) => {
      Logger.info(stdout)
    });
    break
  default:
    require(`../src/bootstrap.ts`);
}
